@use "functions";
@use "mixins";
@use "common";

:root {
  @include mixins.color-variables;
  @include mixins.value-variables;
  @include mixins.z-index-variables;
}

html {
  font-size: #{functions.app-value('base-font-size')};
  @include mixins.base-font;

  @media not print {
    background-color: functions.app-color('layout-bg');
  }
}

body {
  --bg-gradient-angle: #{functions.app-value('bg-gradient-angle')};
  --bg-gradient-start: #{functions.app-color('bg-gradient-start')};
  --bg-gradient-mid: #{functions.app-color('bg-gradient-mid')};
  --bg-gradient-end: #{functions.app-color('bg-gradient-end')};
  min-height: 100vh;
  @include mixins.base-font;
  color: functions.app-color('layout-color');

  &:before {
    content: "";
    display: block;
    position: fixed;
    z-index: functions.app-z-index('background');
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: functions.app-value('bg-gradient-opacity');
    background-image: linear-gradient(calc(180deg - var(--bg-gradient-angle)), var(--bg-gradient-start) #{functions.app-value('bg-gradient-start-position')}, var(--bg-gradient-mid) #{functions.app-value('bg-gradient-mid-position')}, var(--bg-gradient-end) #{functions.app-value('bg-gradient-end-position')});
    background-repeat: no-repeat;
    background-attachment: fixed;
    pointer-events: none;

    @media print {
      display: none !important;
    }
  }

  @include mixins.if-rtl {
    --bg-gradient-angle: calc(-1 * #{functions.app-value('bg-gradient-angle')});
  }

  &.no-anim * {
    transition: none !important;
    animation: none !important;
  }
}

* {
  z-index: functions.app-z-index('default');
}
